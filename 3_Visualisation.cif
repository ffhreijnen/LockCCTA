svgfile "4_Lock.svg";
import  "2_Simulation.cif";

//Used to represent actuator and sensor PLC status.
group def svout(alg string a; alg bool b):
    svgout id a attr "fill" value if b: "green" else "red" end;
end

//Used to represent the buttons + input.
group def buttonvis(alg string a; alg bool on; event b, c):
    svgin  id a event if on: c else b end;
    svgout id a attr "fill" value if on: "yellowgreen" else "indianred" end;
end

//Used to represent the signs + PLC.
group def signlight(alg string a; alg bool b; alg string c, color):
    svgout id a attr "fill" value if b: "green" else "red" end;
    svgout id c attr "fill" value if b: color else "grey" end;
end

svgout id "timer" + <string>3 + "_inner" attr "width" value scale(gate_D_N.S.degree,   0, 45, 0.01, 100);
svgout id "timer" + <string>2 + "_inner" attr "width" value scale(gate_U_N.S.degree,   0, 45, 0.01, 100);
svgout id "timer" + <string>1 + "_inner" attr "width" value scale(pad_S.S3.ext, 0, 10, 0.01, 100);

//Used to represent the doors
//A closed door is black, an open door is green, if the door is in between positions it is yellowgreen.
group svggate:
    svgout id "deurBNH" attr "fill" value if gate_D_N.S.closed: "black"
                                        elif gate_D_N.S.open  : "green"
                                        else "yellowgreen" end;
end

group svggate2:
    svgout id "deurBVH" attr "fill" value if gate_U_N.S.closed: "black"
                                        elif gate_U_N.S.open  : "green"
                                        else "yellowgreen" end;
end

//Button visualisation
knop1  : buttonvis("button1",  button1.o,  button1.u_push,  button1.u_release);
knop2  : buttonvis("button2",  button2.o,  button2.u_push,  button2.u_release);
knop3  : buttonvis("button3",  button3.o,  button3.u_push,  button3.u_release);
knop4  : buttonvis("button4",  button4.o,  button4.u_push,  button4.u_release);
knop5  : buttonvis("button5",  button5.o,  button5.u_push,  button5.u_release);
knop6  : buttonvis("button6",  button6.o,  button6.u_push,  button6.u_release);
knop7  : buttonvis("button7",  button7.o,  button7.u_push,  button7.u_release);
knop8  : buttonvis("button8",  button8.o,  button8.u_push,  button8.u_release);
knop9  : buttonvis("button9",  button9.o,  button9.u_push,  button9.u_release);
knop10 : buttonvis("button10", button10.o, button10.u_push, button10.u_release);
knop11 : buttonvis("button11", button11.o, button11.u_push, button11.u_release);
knop12 : buttonvis("button12", button12.o, button12.u_push, button12.u_release);
knop13 : buttonvis("button13", button13.o, button13.u_push, button13.u_release);
knop14 : buttonvis("button14", button14.o, button14.u_push, button14.u_release);
knop15 : buttonvis("button15", button15.o, button15.u_push, button15.u_release);
knop16 : buttonvis("button16", button16.o, button16.u_push, button16.u_release);
knop17 : buttonvis("button17", button17.o, button17.u_push, button17.u_release);
knop18 : buttonvis("button18", button18.o, button18.u_push, button18.u_release);
knop19 : buttonvis("button19", button19.o, button19.u_push, button19.u_release);
knop20 : buttonvis("button20", button20.o, button20.u_push, button20.u_release);
knop25 : buttonvis("noodstop", emergencystop.o, emergencystop.u_push, emergencystop.u_release);
knop26 : buttonvis("stop1",    stop1.o, stop1.u_push, stop1.u_release);
knop27 : buttonvis("stop2",    stop2.o, stop2.u_push, stop2.u_release);
knop28 : buttonvis("stop3",    stop3.o, stop3.u_push, stop3.u_release);
knop29 : buttonvis("stop4",    stop4.o, stop4.u_push, stop4.u_release);

svout234 : svout("nivBNH", pad_N.S1.o);
svout235 : svout("nivBVH", culvert_N.S.o);

uit1  : svout("a_uit_BNHN_r", out_D_N.A.r);
uit2  : svout("a_uit_BNHN_g", out_D_N.A.g);
uit3  : svout("a_uit_BNHZ_r", out_D_S.A.r);
uit4  : svout("a_uit_BNHZ_g", out_D_S.A.g);
uit5  : svout("a_uit_BVHN_r", out_U_N.A.r);
uit6  : svout("a_uit_BVHN_g", out_U_N.A.g);
uit7  : svout("a_uit_BVHZ_r", out_U_S.A.r);
uit8  : svout("a_uit_BVHZ_g", out_U_S.A.g);

uit9  : signlight("s_uit_BNHN_r", out_D_N.S.r, "svg_uit_BNHN_r", "red");
uit10 : signlight("s_uit_BNHN_g", out_D_N.S.g, "svg_uit_BNHN_g", "green");
uit11 : signlight("s_uit_BNHZ_r", out_D_S.S.r, "svg_uit_BNHZ_r", "red");
uit12 : signlight("s_uit_BNHZ_g", out_D_S.S.g, "svg_uit_BNHZ_g", "green");
uit13 : signlight("s_uit_BVHN_r", out_U_N.S.r, "svg_uit_BVHN_r", "red");
uit14 : signlight("s_uit_BVHN_g", out_U_N.S.g, "svg_uit_BVHN_g", "green");
uit15 : signlight("s_uit_BVHZ_r", out_U_S.S.r, "svg_uit_BVHZ_r", "red");
uit16 : signlight("s_uit_BVHZ_g", out_U_S.S.g, "svg_uit_BVHZ_g", "green");

in1  : svout("a_in_BNHN_r", in_D_N.S.r);
in2  : svout("a_in_BNHN_g", in_D_N.S.g);
in3  : svout("a_in_BNHN_s", in_D_N.S.s);
in4  : svout("a_in_BNHZ_r", in_D_S.S.r);
in5  : svout("a_in_BNHZ_g", in_D_S.S.g);
in6  : svout("a_in_BNHZ_s", in_D_S.S.s);
in7  : svout("a_in_BVHN_r", in_U_N.S.r);
in8  : svout("a_in_BVHN_g", in_U_N.S.g);
in9  : svout("a_in_BVHN_s", in_U_N.S.s);
in10 : svout("a_in_BVHZ_r", in_U_S.S.r);
in11 : svout("a_in_BVHZ_g", in_U_S.S.g);
in12 : svout("a_in_BVHZ_s", in_U_S.S.s);

in13 : signlight("s_in_BNHN_r", in_D_N.A.r, "svg_in_BNHN_r", "red");
in14 : signlight("s_in_BNHN_g", in_D_N.A.g, "svg_in_BNHN_g", "green");
in15 : signlight("s_in_BNHN_s", in_D_N.A.s, "svg_in_BNHN_s", "red");
in16 : signlight("s_in_BNHZ_r", in_D_S.A.r, "svg_in_BNHZ_r", "red");
in17 : signlight("s_in_BNHZ_g", in_D_S.A.g, "svg_in_BNHZ_g", "green");
in18 : signlight("s_in_BNHZ_s", in_D_S.A.s, "svg_in_BNHZ_s", "red");
in19 : signlight("s_in_BVHN_r", in_U_N.A.r, "svg_in_BVHN_r", "red");
in20 : signlight("s_in_BVHN_g", in_U_N.A.g, "svg_in_BVHN_g", "green");
in21 : signlight("s_in_BVHN_s", in_U_N.A.s, "svg_in_BVHN_s", "red");
in22 : signlight("s_in_BVHZ_r", in_U_S.A.r, "svg_in_BVHZ_r", "red");
in23 : signlight("s_in_BVHZ_g", in_U_S.A.g, "svg_in_BVHZ_g", "green");
in24 : signlight("s_in_BVHZ_s", in_U_S.A.s, "svg_in_BVHZ_s", "red");

niv1 : svout("s_niv_1_BNHN_o", pad_N.S1.o);
niv2 : svout("s_niv_1_BNHN_d", pad_N.S1.c);
niv3 : svout("s_niv_2_BNHN_o", pad_N.S2.o);
niv4 : svout("s_niv_2_BNHN_d", pad_N.S2.c);
niv5 : svout("s_niv_3_BNHN_o", pad_N.S3.o);
niv6 : svout("s_niv_3_BNHN_d", pad_N.S3.c);
niv7 : svout("s_niv_1_BNHZ_o", pad_S.S1.o);
niv8 : svout("s_niv_1_BNHZ_d", pad_S.S1.c);
niv9 : svout("s_niv_2_BNHZ_o", pad_S.S2.o);
niv10: svout("s_niv_2_BNHZ_d", pad_S.S2.c);
niv11: svout("s_niv_3_BNHZ_o", pad_S.S3.o);
niv12: svout("s_niv_3_BNHZ_d", pad_S.S3.c);
niv13: svout("a_niv_BNHN_o",   pad_N.A.o);
niv14: svout("a_niv_BNHN_d",   pad_N.A.c);
niv15: svout("a_niv_BNHZ_o",   pad_S.A.o);
niv16: svout("a_niv_BNHZ_d",   pad_S.A.c);

riool1:svout("rioolN",  culvert_N.A.c);
riool2:svout("rioolZ",  culvert_S.A.c);
weg1: svout("wegmeetN", culvert_N.S.o);
weg2: svout("wegmeetZ", culvert_S.S.o);

VOBOf: svout("gw_BNH", s_equal_D.o);
VOBOk: svout("gw_BVH", s_equal_U.o);

ds10 : svout("s_BNHN1", gate_D_N.S.c);
ds20 : svout("s_BNHN2", gate_D_N.S.bc);
ds30 : svout("s_BNHN3", gate_D_N.S.fc);
ds40 : svout("s_BNHN4", gate_D_N.S.fo);
ds50 : svout("s_BNHN5", gate_D_N.S.bo);
ds60 : svout("s_BNHN6", gate_D_N.S.o);

ds11 : svout("s_BNHZ1", gate_D_S.S.c);
ds21 : svout("s_BNHZ2", gate_D_S.S.bc);
ds31 : svout("s_BNHZ3", gate_D_S.S.fc);
ds41 : svout("s_BNHZ4", gate_D_S.S.fo);
ds51 : svout("s_BNHZ5", gate_D_S.S.bo);
ds61 : svout("s_BNHZ6", gate_D_S.S.o);

ds12 : svout("s_BVHN1", gate_U_N.S.c);
ds22 : svout("s_BVHN2", gate_U_N.S.bc);
ds32 : svout("s_BVHN3", gate_U_N.S.fc);
ds42 : svout("s_BVHN4", gate_U_N.S.fo);
ds52 : svout("s_BVHN5", gate_U_N.S.bo);
ds62 : svout("s_BVHN6", gate_U_N.S.o);

ds13 : svout("s_BVHZ1", gate_U_S.S.c);
ds23 : svout("s_BVHZ2", gate_U_S.S.bc);
ds33 : svout("s_BVHZ3", gate_U_S.S.fc);
ds43 : svout("s_BVHZ4", gate_U_S.S.fo);
ds53 : svout("s_BVHZ5", gate_U_S.S.bo);
ds63 : svout("s_BVHZ6", gate_U_S.S.o);

da10 : svout("BNHN_op", gate_D_N.Dir.o);
da11 : svout("BNHN_sl", gate_D_N.Dir.c);
da12 : svout("BNHN_on", gate_D_N.Spe.fo);
da13 : svout("BNHN_ok", gate_D_N.Spe.so);
da14 : svout("BNHN_sn", gate_D_N.Spe.fc);
da15 : svout("BNHN_sk", gate_D_N.Spe.sc);
da16 : svout("BNHN_hd", gate_D_N.Pre.h);
da17 : svout("BNHN_ld", gate_D_N.Pre.l);

da20 : svout("BNHZ_op", gate_D_S.Dir.o);
da21 : svout("BNHZ_sl", gate_D_S.Dir.c);
da22 : svout("BNHZ_on", gate_D_S.Spe.fo);
da23 : svout("BNHZ_ok", gate_D_S.Spe.so);
da24 : svout("BNHZ_sn", gate_D_S.Spe.fc);
da25 : svout("BNHZ_sk", gate_D_S.Spe.sc);
da26 : svout("BNHZ_hd", gate_D_S.Pre.h);
da27 : svout("BNHZ_ld", gate_D_S.Pre.l);

da30 : svout("BVHN_op", gate_U_N.Dir.o);
da31 : svout("BVHN_sl", gate_U_N.Dir.c);
da32 : svout("BVHN_on", gate_U_N.Spe.fo);
da33 : svout("BVHN_ok", gate_U_N.Spe.so);
da34 : svout("BVHN_sn", gate_U_N.Spe.fc);
da35 : svout("BVHN_sk", gate_U_N.Spe.sc);
da36 : svout("BVHN_hd", gate_U_N.Pre.h);
da37 : svout("BVHN_ld", gate_U_N.Pre.l);

da40 : svout("BVHZ_op", gate_U_S.Dir.o);
da41 : svout("BVHZ_sl", gate_U_S.Dir.c);
da42 : svout("BVHZ_on", gate_U_S.Spe.fo);
da43 : svout("BVHZ_ok", gate_U_S.Spe.so);
da44 : svout("BVHZ_sn", gate_U_S.Spe.fc);
da45 : svout("BVHZ_sk", gate_U_S.Spe.sc);
da46 : svout("BVHZ_hd", gate_U_S.Pre.h);
da47 : svout("BVHZ_ld", gate_U_S.Pre.l);
